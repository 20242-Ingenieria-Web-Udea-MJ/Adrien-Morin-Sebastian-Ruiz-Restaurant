// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?  @unique
  image     String?
  role      Role     @default(USER)
}

enum Role {
  USER
  ADMIN
}

model Item {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String
  imageUrl    String
  price       Float
  orders      Order[]
}

model Table {
  id        String  @id @default(uuid())
  number    Int     @unique @default(autoincrement())
  orders    Order[]
}

model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  tableId   String
  itemId    Int
  paymentId Int?
  table     Table       @relation(fields: [tableId], references: [id])
  item      Item        @relation(fields: [itemId], references: [id])
  payment   Payment?    @relation(fields: [paymentId], references: [id])
  status    OrderStatus @default(PENDING)
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  DELIVERED
  PAID
  CANCELLED
}

model Payment {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  type      PaymentType
  orders    Order[]
}

enum PaymentType {
  CASH
  CARD
  OTHER
}
